PYTHON CODE FOR LED BLINKING FOR 
RASPBERRY PI
import RPi.GPIO as GPIO
import time
LED_PIN = 17
GPIO.setmode(GPIO.BCM)
GPIO.setup(LED_PIN, GPIO.OUT)
while True:
 GPIO.output(LED_PIN, GPIO.HIGH)
 time.sleep(1)
 GPIO.output(LED_PIN, GPIO.LOW)
 time.sleep(1)
GPIO.cleanup()
PYTHON CODE FOR TRAFFIC LIGHTS FOR 
RASPBERRY PI
import RPi.GPIO as GPIO
import time
 
try:
 def lightTraffic(led1, led2, led3, delay ):
 GPIO.output(led1, 1)
 time.sleep(delay)
 GPIO.output(led1, 0)
 GPIO.output(led2, 1)
 time.sleep(delay)
 GPIO.output(led2, 0)
GPIO.output(led3, 1) 
 time.sleep(delay)
 GPIO.output(led3, 0) 
 GPIO.setmode(GPIO.BCM)
 button = 19
 GPIO.setup(button, GPIO.IN, pull_up_down=GPIO.PUD_UP)
 ledGreen = 16
 ledYellow = 12
 ledRed = 23
 GPIO.setup(ledGreen, GPIO.OUT)
 GPIO.setup(ledYellow, GPIO.OUT)
 GPIO.setup(ledRed, GPIO.OUT)
 while True:
 input_state = GPIO.input(button)
 if input_state == False:
 print('Button Pressed')
 lightTraffic(ledGreen, ledYellow, ledRed, 1)
 else: 
 GPIO.output(ledGreen, 0)
 GPIO.output(ledYellow, 0)
 GPIO.output(ledRed, 0)
except KeyboardInterrupt:
 print "You've exited the program"
finally:
 GPIO.cleanup()
